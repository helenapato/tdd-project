O processo de TDD clássico consiste em: decidir uma funcionalidade a ser implementada, escrever testes para essa funcionalidade, rodá-los e verificar se eles passam. Se eles não passarem, escrever o mínimo de código necessário para que passem e rodar os testes novamente, repetindo esse ciclo até que todos os testes passem. Quando os testes passarem, verifica-se a necessidade de refatorar o código. Se for necessário, volta ao ciclo com a escrita de código mínimo. Caso não seja, a implementação dessa funcionalidade está completa, e outra pode ser escolhida para reiniciar o processo.

O processo de TDD usando testes funcionais e testes de unidade é similar, porém escrevemos inicialmente testes funcionais e, no momento de escrever o mínimo de código necessário para os testes passarem, existe todo um ciclo de TDD interno para os testes de unidade. Portanto, ao escrever o mínimo de código necessário, inicia-se escrevendo os testes de unidade, eles são rodados e seu resultado é verificado. Caso eles não passem, finalmente é escrito código mínimo de aplicação, então os testes são rodados novamente. Esse ciclo é repetido até que os testes de unidade passem. Então é verificada a necessidade de refatoração. Somente depois que não é mais necessário refatorar os testes de unidade e código de aplicação, os testes funcionais são rodados novamente e o ciclo continua.
